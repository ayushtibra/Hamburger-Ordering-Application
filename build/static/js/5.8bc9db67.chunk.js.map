{"version":3,"sources":["components/Order/Order/Order.module.css","components/Order/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","value","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","price","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","WithErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,wICqCHC,EAnCD,SAAAC,GAEZ,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,MAAOL,EAAMC,YAAYC,KAG7B,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OACEC,EAAAC,EAAAC,cAAA,QACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,SACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKV,EAAGJ,MAEPI,EAAGJ,KAVN,KAUcI,EAAGH,MAVjB,OAcJ,OACEI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACtBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,qBAAaX,EAAMqB,kDCvB5BC,8LAOFC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,yCAoBtD,IAAIC,EAASlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MAUb,OATKL,KAAKvB,MAAM6B,UACdF,EAASJ,KAAKvB,MAAM2B,OAAOpB,IAAI,SAAAR,GAAK,OAClCU,EAAAC,EAAAC,cAACb,EAAD,CACEoB,IAAKnB,EAAM+B,GACX7B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,WAIZZ,EAAAC,EAAAC,cAAA,WAAMgB,UArCII,aAyDNC,sBAhBS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAMlC,MAAM4B,OACpBE,QAASI,EAAMlC,MAAM8B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OACbS,EAASC,IAAoBX,EAAOC,OAI3BM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.8bc9db67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__7xWBm\"};","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = props => {\r\n  //to turn ingredients into array of ingredients you can follow same logic as in burger or\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      value: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 10px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.value})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {props.price}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport WithErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/Burger/UI/Spinner/Spinner\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Orders extends Component {\r\n  // state = {\r\n  //   orders: [],\r\n  //   loading: true\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    // axios\r\n    //   .get(\"/orders.json\")\r\n    //   .then(res => {\r\n    //     const fetchOrders = [];\r\n    //     for (let key in res.data) {\r\n    //       fetchOrders.push({\r\n    //         ...res.data[key],\r\n    //         id: key\r\n    //       });\r\n    //     }\r\n    //     console.log(res.data);\r\n    //     this.setState({ loading: false, orders: fetchOrders });\r\n    //   })\r\n    //   .catch(error => {\r\n    //     this.setState({ loading: false });\r\n    //   });\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map(order => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}