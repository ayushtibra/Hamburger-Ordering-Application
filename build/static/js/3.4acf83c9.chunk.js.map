{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Burger/UI/Input/Input.js","components/Burger/UI/Input/Input.module.css"],"names":["module","exports","CheckoutSummary","ContactData","checkoutSummary","props","react_default","a","createElement","className","classes","style","margin","width","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","formIsValid","street","zipCode","minLength","maxLength","isNumeric","country","email","deliveryMethod","options","displayValue","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updatedObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementArray","key","push","id","config","form","onSubmit","map","formElement","Input","shouldValidate","invalid","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputClasses","InputElement","validationError","Invalid","ValidationError","inputElement","assign","join","onChange","option","vale","Label","label"],"mappings":"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","file":"static/js/3.4acf83c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__ZZqpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1RX1z\"};","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../Burger/UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h2> Hope Burger Taste Well!</h2>\r\n\r\n      <div style={{ margin: \"auto\", width: \"100%\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { Component } from \"react\";\n\nimport Button from \"../../../components/Burger/UI/Button/Button\";\nimport Spinner from \"../../../components/Burger/UI/Spinner/Spinner\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport Input from \"../../../components/Burger/UI/Input/Input\";\nimport withErrorHandler from \".././../../hoc/withErrorHandler/withErrorHandler\";\nimport { updatedObject, checkValidity } from \"../../../shared/utilityFunction\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        formIsValid: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        formIsValid: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Zip Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false,\n        formIsValid: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n        formIsValid: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n          // isEmail:true\n        },\n        valid: false,\n        touched: false,\n        formIsValid: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\n          ]\n        },\n        value: \"fastest\",\n        validation: {},\n        valid: true,\n        formIsValid: false\n      }\n    }\n    // loading: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    // this.setState({ loading: true });\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    };\n\n    this.props.onOrderBurger(order, this.props.token);\n    // axios\n    //   .post(\"/orders.json\", order)\n    //   .then(response => {\n    //     this.setState({ loading: false });\n    //     this.props.history.push(\"/\");\n    //   })\n    //   .catch(error => {\n    //     this.setState({ loading: false });\n    //   });\n  };\n\n  // checkValidity(value, rules) {\n  //   // let isValid = false;\n  //   let isValid = true;\n\n  //   //for double check as we not required validation in deliveryMethod but if we not add validation then it\n  //   //show error so two ways 1) set validation={} 2)\n  //   if (!rules) {\n  //     return true;\n  //   }\n\n  //   if (rules.required) {\n  //     isValid = value.trim() !== \"\" && isValid;\n  //   }\n\n  //   if (rules.minLength) {\n  //     isValid = value.length >= rules.minLength && isValid;\n  //   }\n\n  //   if (rules.maxLength) {\n  //     isValid = value.length <= rules.minLength && isValid;\n  //   }\n  //   // without adding && isValid in all those above rules it not working, only last statement execute so to\n  //   // execute all of the above add isValid in all and set isValid = true inititally.\n  //   // if (rules.isEmail) {\n  //   //   const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-] + (?:\\.[a-z0-9])\n  //   //   isValid = pattern.test(value) && isValid\n  //   // }\n\n  //   if (rules.isNumeric) {\n  //     const pattern = /^\\d+$/;\n  //     isValid = pattern.test(value) && isValid;\n  //   }\n\n  //   return isValid;\n  // }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    // //console.log(event.target.value);\n    // const updatedOrderForm = {\n    //   ...this.state.orderForm\n    // };\n    // //this is not completely clone so to deeply clone we again.\n    // const updatedFormElement = {\n    //   ...updatedOrderForm[inputIdentifier]\n    // };\n    // updatedFormElement.value = event.target.value;\n    // updatedFormElement.valid = this.checkValidity(\n    //   updatedFormElement.value,\n    //   updatedFormElement.validation\n    // );\n    // updatedFormElement.touched = true;\n    // updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n    const updatedFormElement = updatedObject(\n      this.state.orderForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.orderForm[inputIdentifier].validation\n        ),\n        touched: true\n      }\n    );\n\n    const updatedOrderForm = updatedObject(this.state.orderForm, {\n      [inputIdentifier]: updatedFormElement\n    });\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n    // console.log(updatedFormElement);\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    //convert my state object to an array so I can loop through\n    const formElementArray = [];\n    for (let key in this.state.orderForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\n// import * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  // state = {\n  //     ingredients: null,\n  //     price: 0\n  // }\n\n  // componentWillMount () {\n  //     const query = new URLSearchParams( this.props.location.search );\n  //     const ingredients = {};\n  //     let price = 0;\n  //     for ( let param of query.entries() ) {\n  //         // ['salad', '1']\n  //         if (param[0] === 'price') {\n  //             price = param[1];\n  //         } else {\n  //             ingredients[param[0]] = +param[1];\n  //         }\n  //     }\n  //     this.setState( { ingredients: ingredients, totalPrice: price } );\n  // }\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = <Redirect to=\"/\" />;\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? (\n        <Redirect to=\"/\" />\n      ) : null;\n      summary = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props.ings}\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n          />\n          {/* <Route\n          path={this.props.match.path + \"/contact-data\"}\n          render={props => (\n            <ContactData\n              ingredients={this.state.ingredients}\n              price={this.state.totalPrice}\n              {...props}\n            />\n          )}\n        /> */}\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            component={ContactData}\n          />\n        </div>\n      );\n    }\n    return <div>{summary}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = props => {\r\n  const inputClasses = [classes.InputElement];\r\n  let validationError = null;\r\n\r\n  if (props.invalid && props.touched && props.shouldValidate) {\r\n    inputClasses.push(classes.Invalid);\r\n    validationError = (\r\n      <p className={classes.ValidationError}>\r\n        {props.elementConfig.placeholder} is not valid, try again!\r\n        {/* {props.elementConfig.placeholder} \"{props.value}\" is not valid, try\r\n        again! */}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  let inputElement = null;\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          onChange={props.changed}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          onChange={props.changed}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.vale}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          onChange={props.changed}\r\n          value={props.value}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1Xa5a\",\"Label\":\"Input_Label__3ZRo5\",\"InputElement\":\"Input_InputElement__3KF3P\",\"Invalid\":\"Input_Invalid__30yKx\",\"ValidationError\":\"Input_ValidationError__2mAPQ\"};"],"sourceRoot":""}